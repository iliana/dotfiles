#!/bin/bash
set -euo pipefail
hash jq pipx restic

if [[ $# -lt 1 ]]; then
    >&2 echo "usage: restic.sh COMMAND [OPTIONS]"
    exit 1
fi
COMMAND=$1
shift

credentials_json="$(pipx run aws-sso-util credential-process --profile backups)"
AWS_ACCESS_KEY_ID="$(jq -r .AccessKeyId <<<"$credentials_json")"
export AWS_ACCESS_KEY_ID
AWS_SECRET_ACCESS_KEY="$(jq -r .SecretAccessKey <<<"$credentials_json")"
export AWS_SECRET_ACCESS_KEY
AWS_SESSION_TOKEN="$(jq -r .SessionToken <<<"$credentials_json")"
export AWS_SESSION_TOKEN

repo=$(cat ~/.config/dotfiles/.resticrepo)
if [[ -f "$HOME/.config/dotfiles/.resticpass" ]]; then
    RESTIC_PASSWORD_FILE="$HOME/.config/dotfiles/.resticpass"
    export RESTIC_PASSWORD_FILE
elif hash security 2>/dev/null; then
    RESTIC_PASSWORD_COMMAND="security find-generic-password -s restic -a $repo -w"
    export RESTIC_PASSWORD_COMMAND
fi

case "$COMMAND" in
    backup-home)
        cd ~ || exit
        exec restic backup -r "$repo" \
            --exclude-caches --exclude-file ~/.config/dotfiles/resticignore "$@" \
            .
        ;;
    #backup-data)
    #    cd "$1" || exit
    #    shift
    #    exec proot -b .:/data -w /data \
    #        restic backup -r "$repo" "$@" .
    #    ;;
    *)
        exec restic "$COMMAND" -r "$repo" "$@"
        ;;
esac
